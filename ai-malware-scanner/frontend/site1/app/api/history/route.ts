import { type NextRequest, NextResponse } from "next/server"
import clientPromise from "@/lib/mongodb"

export async function GET(request: NextRequest) {
  try {
    const client = await clientPromise
    const db = client.db("cybersecurity_scanner")
    const collection = db.collection("scan_results")

    const results = await collection.find({}).sort({ scanDate: -1 }).limit(50).toArray()

    return NextResponse.json({
      success: true,
      results: results.map((result) => ({
        ...result,
        _id: result._id.toString(),
      })),
    })
  } catch (error) {
    console.error("History fetch error:", error)
    return NextResponse.json({ error: "Failed to fetch history" }, { status: 500 })
  }
}

export async function DELETE(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    const id = searchParams.get("id")

    if (!id) {
      return NextResponse.json({ error: "No ID provided" }, { status: 400 })
    }

    const client = await clientPromise
    const db = client.db("cybersecurity_scanner")
    const collection = db.collection("scan_results")

    await collection.deleteOne({ _id: id })

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error("Delete error:", error)
    return NextResponse.json({ error: "Failed to delete" }, { status: 500 })
  }
}
