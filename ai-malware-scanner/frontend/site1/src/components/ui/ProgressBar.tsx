import React, { useState, useEffect } from 'react';

interface ProgressBarProps {
  progress: number;
  status?: 'default' | 'success' | 'danger';
  showLabel?: boolean;
  className?: string;
  animated?: boolean;
}

const ProgressBar = ({
  progress,
  status = 'default',
  showLabel = true,
  className = '',
  animated = true,
}: ProgressBarProps) => {
  const [displayProgress, setDisplayProgress] = useState(0);
  
  useEffect(() => {
    // Animate the progress
    if (animated) {
      const timer = setTimeout(() => {
        setDisplayProgress(progress);
      }, 100);
      return () => clearTimeout(timer);
    } else {
      setDisplayProgress(progress);
    }
  }, [progress, animated]);
  
  const getStatusClasses = () => {
    switch (status) {
      case 'success':
        return 'progress-bar-fill success';
      case 'danger':
        return 'progress-bar-fill danger';
      default:
        return 'progress-bar-fill';
    }
  };
  
  return (
    <div className={`w-full ${className}`}>
      <div className="progress-bar-track">
        <div 
          className={getStatusClasses()}
          style={{ width: `${displayProgress}%` }}
        />
      </div>
      {showLabel && (
        <div className="mt-1 text-xs text-gray-400 flex justify-between">
          <span>{displayProgress.toFixed(0)}%</span>
          <span>
            {progress < 100 ? 'Scanning...' : 'Scan Complete'}
          </span>
        </div>
      )}
    </div>
  );
};

export default ProgressBar;
